// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id        String    @id @default(cuid())
  name      String    @unique
  slug      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Product {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  variants    Variant[]
  active      Boolean   @default(true)
  }

model Variant {
  id          String      @id @default(cuid())
  productId   String
  product     Product     @relation(fields: [productId], references: [id])
  label       String      @default("Unknown") // ðŸ‘ˆ Default added
  size        String?
  priceZAR    Int         @default(0)
  stock       Int         @default(0)
  whatsappSku String?
  scentNotes  String?
  tags        String[]    @default([])
  imageUrl    String      @default("/images/placeholder.png")
  active      Boolean     @default(true)
    orderItems  OrderItem[]
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
}

enum OrderStatus {
  DRAFT
  PENDING
  PAID
  CANCELED
}

model Order {
  id            String      @id @default(cuid())
  status        OrderStatus @default(PENDING)
  email         String
  name          String
  phone         String
  addressLine1  String
  addressLine2  String?
  city          String
  postalCode    String
  subtotalCents Int
  shippingCents Int
  totalCents    Int
  pfPaymentId   String?
  pfSignature   String?
  pfRaw         Json?
  createdAt     DateTime    @default(now())
  items         OrderItem[]
}

model OrderItem {
  id               String  @id @default(cuid())
  orderId          String
  order            Order   @relation(fields: [orderId], references: [id])
  variantId        String
  variant          Variant @relation(fields: [variantId], references: [id])
  qty              Int
  priceCentsAtSale Int
}
